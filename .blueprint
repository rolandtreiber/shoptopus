created:
    - app/Http/Controllers/Api/AuthController.php
    - app/Http/Controllers/UserController.php
    - app/Http/Controllers/ProductController.php
    - app/Http/Controllers/CartController.php
    - app/Http/Controllers/AdminController.php
    - app/Http/Controllers/ProductCategoryController.php
    - app/Http/Controllers/ProductTagController.php
    - app/Http/Controllers/LanguageController.php
    - app/Http/Controllers/DeliveryTypeController.php
    - app/Http/Controllers/DeliveryRuleController.php
    - app/Http/Controllers/VoucherCodeController.php
    - app/Http/Controllers/DiscountRuleController.php
    - database/factories/Models/UserFactory.php
    - database/factories/Models/ProductFactory.php
    - database/factories/Models/AccessTokenFactory.php
    - database/factories/Models/PaymentSourceFactory.php
    - database/factories/Models/PaymentFactory.php
    - database/factories/Models/SystemSettingFactory.php
    - database/factories/Models/LanguageFactory.php
    - database/factories/Models/ContentFactory.php
    - database/factories/Models/FileContentFactory.php
    - database/factories/Models/EventLogFactory.php
    - database/factories/Models/ProductVariantFactory.php
    - database/factories/Models/CartFactory.php
    - database/factories/Models/DiscountRuleFactory.php
    - database/factories/Models/VoucherCodeFactory.php
    - database/factories/Models/ProductCategoryFactory.php
    - database/factories/Models/ProductTagFactory.php
    - database/factories/Models/ProductAttributeFactory.php
    - database/factories/Models/ProductAttributeOptionFactory.php
    - database/factories/Models/DeliveryTypeFactory.php
    - database/factories/Models/DeliveryRuleFactory.php
    - database/migrations/2021_09_09_080647_create_users_table.php
    - database/migrations/2021_09_09_080648_create_products_table.php
    - database/migrations/2021_09_09_080649_create_access_tokens_table.php
    - database/migrations/2021_09_09_080650_create_payment_sources_table.php
    - database/migrations/2021_09_09_080651_create_payments_table.php
    - database/migrations/2021_09_09_080652_create_system_settings_table.php
    - database/migrations/2021_09_09_080653_create_languages_table.php
    - database/migrations/2021_09_09_080654_create_contents_table.php
    - database/migrations/2021_09_09_080655_create_file_contents_table.php
    - database/migrations/2021_09_09_080656_create_event_logs_table.php
    - database/migrations/2021_09_09_080657_create_product_variants_table.php
    - database/migrations/2021_09_09_080658_create_carts_table.php
    - database/migrations/2021_09_09_080659_create_discount_rules_table.php
    - database/migrations/2021_09_09_080700_create_voucher_codes_table.php
    - database/migrations/2021_09_09_080701_create_product_categories_table.php
    - database/migrations/2021_09_09_080702_create_product_tags_table.php
    - database/migrations/2021_09_09_080703_create_product_attributes_table.php
    - database/migrations/2021_09_09_080704_create_product_attribute_options_table.php
    - database/migrations/2021_09_09_080705_create_delivery_types_table.php
    - database/migrations/2021_09_09_080706_create_delivery_rules_table.php
    - app/Models/User.php
    - app/Models/Product.php
    - app/Models/AccessToken.php
    - app/Models/PaymentSource.php
    - app/Models/Payment.php
    - app/Models/SystemSetting.php
    - app/Models/Language.php
    - app/Models/Content.php
    - app/Models/FileContent.php
    - app/Models/EventLog.php
    - app/Models/ProductVariant.php
    - app/Models/Cart.php
    - app/Models/DiscountRule.php
    - app/Models/VoucherCode.php
    - app/Models/ProductCategory.php
    - app/Models/ProductTag.php
    - app/Models/ProductAttribute.php
    - app/Models/ProductAttributeOption.php
    - app/Models/DeliveryType.php
    - app/Models/DeliveryRule.php
    - database/seeders/UserSeeder.php
    - database/seeders/AccessTokenSeeder.php
    - database/seeders/PaymentSourceSeeder.php
    - database/seeders/PaymentSeeder.php
    - database/seeders/ProductSeeder.php
    - database/seeders/ProductCategorySeeder.php
    - database/seeders/ProductAttributeSeeder.php
    - database/seeders/ProductAttributeOptionSeeder.php
    - database/seeders/SystemSettingSeeder.php
    - database/seeders/ContentSeeder.php
    - database/seeders/FileContentSeeder.php
    - database/seeders/EventLogSeeder.php
    - database/seeders/DeliveryTypeSeeder.php
    - database/seeders/DeliveryRuleSeeder.php
    - database/seeders/DiscountRuleSeeder.php
    - database/seeders/VoucherCodeSeeder.php
    - database/seeders/ProductTagSeeder.php
    - tests/Feature/Http/Controllers/Api/AuthControllerTest.php
    - tests/Feature/Http/Controllers/UserControllerTest.php
    - tests/Feature/Http/Controllers/ProductControllerTest.php
    - tests/Feature/Http/Controllers/CartControllerTest.php
    - tests/Feature/Http/Controllers/AdminControllerTest.php
    - tests/Feature/Http/Controllers/ProductCategoryControllerTest.php
    - tests/Feature/Http/Controllers/ProductTagControllerTest.php
    - tests/Feature/Http/Controllers/LanguageControllerTest.php
    - tests/Feature/Http/Controllers/DeliveryTypeControllerTest.php
    - tests/Feature/Http/Controllers/DeliveryRuleControllerTest.php
    - tests/Feature/Http/Controllers/VoucherCodeControllerTest.php
    - tests/Feature/Http/Controllers/DiscountRuleControllerTest.php
    - app/Http/Requests/UserUpdateRequest.php
    - app/Http/Requests/UserStoreRequest.php
    - app/Http/Requests/ProductUpdateRequest.php
    - app/Http/Requests/ProductStoreRequest.php
    - app/Http/Requests/DeliveryRuleStoreRequest.php
updated:
    - routes/web.php
models:
    Models\User: {  }
    User: { name: 'string:100', role_id: 'tinyInteger default:0', email: 'string:150 unique', email_verified_at: timestamp, password: string, client_ref: 'string:12 nullable index', language_id: 'id foreign:languages', relationships: { HasMany: 'PaymentSource, Payment, Order', HasOne: 'Cart, Language' } }
    Product: { name: 'string:100', price: decimal, status: tinyInteger, purchase_count: unsignedBigInteger, stock: unsignedBigInteger, backup_stock: 'unsignedBigInteger nullable', relationships: { HasMany: 'ProductTag, ProductCategory, ProductAttribute, ProductVariant' } }
    AccessToken: { tinyInteger: 'type default:0', token: 'string:120', user_id: 'id foreign:users nullable', issuer_user_id: 'id foreign:users', expiry: dateTime }
    PaymentSource: { user_id: 'id foreign:users', name: 'string:100', source_id: 'string:150 nullable', exp_month: 'string:2 nullable', exp_year: 'string:4 nullable', last_four: 'string:4 nullable', brand: 'string:50 nullable', stripe_user_id: 'string:120 nullable', payment_method_id: tinyInteger, relationships: { HasMany: Payment } }
    Payment: { payable_type: 'string nullable', payable_id: 'unsignedBigInteger nullable', payment_source_id: 'id foreign:payment_sources', user_id: 'id foreign:users', decimal: amount, status: 'tinyInteger default:0', payment_ref: 'string:150', method_ref: 'string:150', type: tinyInteger, description: 'string:250 nullable' }
    SystemSetting: { key: 'string:60', value: longText, type: 'tinyInteger default:0' }
    Language: { name: 'string:100' }
    Content: { contentable_type: 'string nullable', contentable_id: 'unsignedBigInteger nullable', language_id: 'id foreign:languages', type: tinyInteger, text: text }
    FileContent: { url: string, fileable_type: 'string nullable', fileable_id: 'unsignedBigInteger nullable', title: 'string nullable', description: 'string nullable' }
    EventLog: { message: 'string:200', type: tinyInteger, notification: 'boolean default:true', user_id: 'id foreign:users', actioned: 'boolean default:false', data: text }
    ProductVariant: { product_id: 'id foreign:products nullable', data: text, price: decimal }
    Cart: { user_id: 'id foreign:users nullable', ip_address: 'string:100', relationships: { BelongsTo: User } }
    DiscountRule: { discountable_type: 'string nullable', discountable_id: 'unsignedBigInteger nullable', type: tinyInteger, amount: decimal, valid_from: datetime, valid_until: datetime }
    VoucherCode: { code: 'string:100' }
    ProductCategory: { parent_id: 'id foreign:product_categories nullable', softdeletes: softdeletes }
    ProductTag: { softdeletes: softdeletes }
    ProductAttribute: { softdeletes: softdeletes }
    ProductAttributeOption: { softdeletes: softdeletes }
    DeliveryType: { status: tinyInteger, relationships: { HasMany: DeliveryRule } }
    DeliveryRule: { delivery_type_id: 'id foreign:delivery_types nullable', status: tinyInteger, relationships: { BelongsTo: DeliveryType } }
    Models/User: { name: 'string:100', role_id: 'tinyInteger default:0', email: 'string:150 unique', email_verified_at: timestamp, password: string, client_ref: 'string:12 nullable index', language_id: 'id foreign:languages', relationships: { HasMany: 'PaymentSource, Payment, Order', HasOne: 'Cart, Language' } }
    Models/Product: { name: 'string:100', price: decimal, status: tinyInteger, purchase_count: unsignedBigInteger, stock: unsignedBigInteger, backup_stock: 'unsignedBigInteger nullable', relationships: { HasMany: 'ProductTag, ProductCategory, ProductAttribute, ProductVariant' } }
    Models/AccessToken: { tinyInteger: 'type default:0', token: 'string:120', user_id: 'id foreign:users nullable', issuer_user_id: 'id foreign:users', expiry: dateTime }
    Models/PaymentSource: { user_id: 'id foreign:users', name: 'string:100', source_id: 'string:150 nullable', exp_month: 'string:2 nullable', exp_year: 'string:4 nullable', last_four: 'string:4 nullable', brand: 'string:50 nullable', stripe_user_id: 'string:120 nullable', payment_method_id: tinyInteger, relationships: { HasMany: Payment } }
    Models/Payment: { payable_type: 'string nullable', payable_id: 'unsignedBigInteger nullable', payment_source_id: 'id foreign:payment_sources', user_id: 'id foreign:users', decimal: amount, status: 'tinyInteger default:0', payment_ref: 'string:150', method_ref: 'string:150', type: tinyInteger, description: 'string:250 nullable' }
    Models/SystemSetting: { key: 'string:60', value: longText, type: 'tinyInteger default:0' }
    Models/Language: { name: 'string:100' }
    Models/Content: { contentable_type: 'string nullable', contentable_id: 'unsignedBigInteger nullable', language_id: 'id foreign:languages', type: tinyInteger, text: text }
    Models/FileContent: { url: string, fileable_type: 'string nullable', fileable_id: 'unsignedBigInteger nullable', title: 'string nullable', description: 'string nullable' }
    Models/EventLog: { message: 'string:200', type: tinyInteger, notification: 'boolean default:true', user_id: 'id foreign:users', actioned: 'boolean default:false', data: text }
    Models/ProductVariant: { product_id: 'id foreign:products nullable', data: text, price: decimal }
    Models/Cart: { user_id: 'id foreign:users nullable', ip_address: 'string:100', relationships: { BelongsTo: User } }
    Models/DiscountRule: { discountable_type: 'string nullable', discountable_id: 'unsignedBigInteger nullable', type: tinyInteger, amount: decimal, valid_from: datetime, valid_until: datetime }
    Models/VoucherCode: { code: 'string:100' }
    Models/ProductCategory: { parent_id: 'id foreign:product_categories nullable', softdeletes: softdeletes }
    Models/ProductTag: { softdeletes: softdeletes }
    Models/ProductAttribute: { softdeletes: softdeletes }
    Models/ProductAttributeOption: { softdeletes: softdeletes }
    Models/DeliveryType: { status: tinyInteger, relationships: { HasMany: DeliveryRule } }
    Models/DeliveryRule: { delivery_type_id: 'id foreign:delivery_types nullable', status: tinyInteger, relationships: { BelongsTo: DeliveryType } }
